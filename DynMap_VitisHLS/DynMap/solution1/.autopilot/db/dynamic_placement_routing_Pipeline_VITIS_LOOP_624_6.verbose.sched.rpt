

================================================================
== Vitis HLS Report for 'dynamic_placement_routing_Pipeline_VITIS_LOOP_624_6'
================================================================
* Date:           Wed Jan 17 08:24:14 2024

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:48:09 MDT 2021)
* Project:        DynMap
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z035-ffg676-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.383 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_624_6  |        ?|        ?|         2|          2|          1|     ?|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 2
* Pipeline : 1
  Pipeline-0 : II = 2, D = 2, States = { 1 2 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.18>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 5 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%zext_ln608_read = read i6 @_ssdm_op_Read.ap_auto.i6, i6 %zext_ln608"   --->   Operation 6 'read' 'zext_ln608_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%add_ln619_read = read i10 @_ssdm_op_Read.ap_auto.i10, i10 %add_ln619"   --->   Operation 7 'read' 'add_ln619_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%j_3_reload_read = read i4 @_ssdm_op_Read.ap_auto.i4, i4 %j_3_reload"   --->   Operation 8 'read' 'j_3_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%zext_ln608_cast = zext i6 %zext_ln608_read"   --->   Operation 9 'zext' 'zext_ln608_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (1.29ns)   --->   "%store_ln0 = store i4 0, i4 %j"   --->   Operation 10 'store' 'store_ln0' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.lr.ph28"   --->   Operation 11 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%j_1 = load i4 %j" [DynMap/DynMap_4HLS.cpp:624]   --->   Operation 12 'load' 'j_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 13 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.96ns)   --->   "%icmp_ln624 = icmp_ult  i4 %j_1, i4 %j_3_reload_read" [DynMap/DynMap_4HLS.cpp:624]   --->   Operation 14 'icmp' 'icmp_ln624' <Predicate = true> <Delay = 0.96> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 15 [1/1] (0.99ns)   --->   "%j_2 = add i4 %j_1, i4 1" [DynMap/DynMap_4HLS.cpp:624]   --->   Operation 15 'add' 'j_2' <Predicate = true> <Delay = 0.99> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 16 [1/1] (1.29ns)   --->   "%br_ln624 = br i1 %icmp_ln624, void %.critedge.loopexit.exitStub, void %.split10" [DynMap/DynMap_4HLS.cpp:624]   --->   Operation 16 'br' 'br_ln624' <Predicate = true> <Delay = 1.29>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%zext_ln627 = zext i4 %j_1" [DynMap/DynMap_4HLS.cpp:627]   --->   Operation 17 'zext' 'zext_ln627' <Predicate = (icmp_ln624)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (1.41ns)   --->   "%add_ln627 = add i10 %add_ln619_read, i10 %zext_ln627" [DynMap/DynMap_4HLS.cpp:627]   --->   Operation 18 'add' 'add_ln627' <Predicate = (icmp_ln624)> <Delay = 1.41> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.41> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln627_1 = zext i10 %add_ln627" [DynMap/DynMap_4HLS.cpp:627]   --->   Operation 19 'zext' 'zext_ln627_1' <Predicate = (icmp_ln624)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%dependency_predecessor_values_addr = getelementptr i8 %dependency_predecessor_values, i64 0, i64 %zext_ln627_1" [DynMap/DynMap_4HLS.cpp:627]   --->   Operation 20 'getelementptr' 'dependency_predecessor_values_addr' <Predicate = (icmp_ln624)> <Delay = 0.00>
ST_1 : Operation 21 [2/2] (2.77ns)   --->   "%dependency_predecessor_values_load = load i10 %dependency_predecessor_values_addr" [DynMap/DynMap_4HLS.cpp:627]   --->   Operation 21 'load' 'dependency_predecessor_values_load' <Predicate = (icmp_ln624)> <Delay = 2.77> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 1000> <RAM>

State 2 <SV = 1> <Delay = 5.38>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%specloopname_ln624 = specloopname void @_ssdm_op_SpecLoopName, void @empty_41" [DynMap/DynMap_4HLS.cpp:624]   --->   Operation 22 'specloopname' 'specloopname_ln624' <Predicate = (icmp_ln624)> <Delay = 0.00>
ST_2 : Operation 23 [1/2] (2.77ns)   --->   "%dependency_predecessor_values_load = load i10 %dependency_predecessor_values_addr" [DynMap/DynMap_4HLS.cpp:627]   --->   Operation 23 'load' 'dependency_predecessor_values_load' <Predicate = (icmp_ln624)> <Delay = 2.77> <CoreInst = "RAM">   --->   Core 82 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 1000> <RAM>
ST_2 : Operation 24 [1/1] (1.31ns)   --->   "%icmp_ln626 = icmp_eq  i8 %zext_ln608_cast, i8 %dependency_predecessor_values_load" [DynMap/DynMap_4HLS.cpp:626]   --->   Operation 24 'icmp' 'icmp_ln626' <Predicate = (icmp_ln624)> <Delay = 1.31> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.31> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (1.29ns)   --->   "%br_ln626 = br i1 %icmp_ln626, void, void %.critedge.loopexit.exitStub" [DynMap/DynMap_4HLS.cpp:626]   --->   Operation 25 'br' 'br_ln626' <Predicate = (icmp_ln624)> <Delay = 1.29>
ST_2 : Operation 26 [1/1] (1.29ns)   --->   "%store_ln624 = store i4 %j_2, i4 %j" [DynMap/DynMap_4HLS.cpp:624]   --->   Operation 26 'store' 'store_ln624' <Predicate = (icmp_ln624 & !icmp_ln626)> <Delay = 1.29>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.lr.ph28"   --->   Operation 27 'br' 'br_ln0' <Predicate = (icmp_ln624 & !icmp_ln626)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%merge = phi i1 1, void %.lr.ph28, i1 0, void %.split10"   --->   Operation 28 'phi' 'merge' <Predicate = (icmp_ln626) | (!icmp_ln624)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%ret_ln0 = ret i1 %merge"   --->   Operation 29 'ret' 'ret_ln0' <Predicate = (icmp_ln626) | (!icmp_ln624)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 4.19ns
The critical path consists of the following:
	'alloca' operation ('j') [5]  (0 ns)
	'load' operation ('j', DynMap/DynMap_4HLS.cpp:624) on local variable 'j' [13]  (0 ns)
	'add' operation ('add_ln627', DynMap/DynMap_4HLS.cpp:627) [21]  (1.42 ns)
	'getelementptr' operation ('dependency_predecessor_values_addr', DynMap/DynMap_4HLS.cpp:627) [23]  (0 ns)
	'load' operation ('dependency_predecessor_values_load', DynMap/DynMap_4HLS.cpp:627) on array 'dependency_predecessor_values' [24]  (2.77 ns)

 <State 2>: 5.38ns
The critical path consists of the following:
	'load' operation ('dependency_predecessor_values_load', DynMap/DynMap_4HLS.cpp:627) on array 'dependency_predecessor_values' [24]  (2.77 ns)
	'icmp' operation ('icmp_ln626', DynMap/DynMap_4HLS.cpp:626) [25]  (1.31 ns)
	multiplexor before 'phi' operation ('merge') [31]  (1.3 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
