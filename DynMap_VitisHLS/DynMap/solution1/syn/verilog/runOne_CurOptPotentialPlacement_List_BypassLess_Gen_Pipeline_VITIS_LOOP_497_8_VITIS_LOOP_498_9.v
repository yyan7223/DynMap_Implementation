// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module runOne_CurOptPotentialPlacement_List_BypassLess_Gen_Pipeline_VITIS_LOOP_497_8_VITIS_LOOP_498_9 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv115123_in,
        mul_ln497,
        potentialPlacement_AllPreds_address0,
        potentialPlacement_AllPreds_ce0,
        potentialPlacement_AllPreds_q0,
        potentialPlacement_AllPreds_address1,
        potentialPlacement_AllPreds_ce1,
        potentialPlacement_AllPreds_q1,
        intersection_address0,
        intersection_ce0,
        intersection_we0,
        intersection_d0,
        hasItst_out,
        hasItst_out_ap_vld,
        inc1313173_out,
        inc1313173_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] conv115123_in;
input  [14:0] mul_ln497;
output  [7:0] potentialPlacement_AllPreds_address0;
output   potentialPlacement_AllPreds_ce0;
input  [3:0] potentialPlacement_AllPreds_q0;
output  [7:0] potentialPlacement_AllPreds_address1;
output   potentialPlacement_AllPreds_ce1;
input  [3:0] potentialPlacement_AllPreds_q1;
output  [3:0] intersection_address0;
output   intersection_ce0;
output   intersection_we0;
output  [3:0] intersection_d0;
output  [0:0] hasItst_out;
output   hasItst_out_ap_vld;
output  [7:0] inc1313173_out;
output   inc1313173_out_ap_vld;

reg ap_idle;
reg potentialPlacement_AllPreds_ce0;
reg potentialPlacement_AllPreds_ce1;
reg intersection_ce0;
reg intersection_we0;
reg hasItst_out_ap_vld;
reg inc1313173_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln497_fu_186_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln508_fu_223_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln499_1_fu_238_p1;
wire   [63:0] zext_ln500_fu_273_p1;
wire   [0:0] icmp_ln499_fu_264_p2;
reg   [6:0] j_fu_60;
wire   [6:0] j_9_fu_243_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_j_8;
reg   [6:0] i_fu_64;
wire   [6:0] select_ln508_1_fu_215_p3;
reg   [6:0] ap_sig_allocacmp_i_load;
reg   [14:0] indvar_flatten13_fu_68;
wire   [14:0] add_ln497_fu_192_p2;
reg   [14:0] ap_sig_allocacmp_indvar_flatten13_load;
reg   [7:0] inc1313173_fu_72;
wire   [7:0] add_ln501_fu_278_p2;
reg   [0:0] hasItst_fu_76;
wire    ap_block_pp0_stage0_01001;
wire   [7:0] j_cast_fu_176_p1;
wire   [0:0] icmp_ln498_fu_180_p2;
wire   [6:0] i_34_fu_201_p2;
wire   [6:0] select_ln508_fu_207_p3;
wire   [7:0] zext_ln499_fu_228_p1;
wire   [7:0] add_ln499_fu_232_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

runOne_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            hasItst_fu_76 <= 1'd0;
        end else if (((icmp_ln499_fu_264_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            hasItst_fu_76 <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln497_fu_186_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_64 <= select_ln508_1_fu_215_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_64 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            inc1313173_fu_72 <= 8'd0;
        end else if (((icmp_ln499_fu_264_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            inc1313173_fu_72 <= add_ln501_fu_278_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln497_fu_186_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten13_fu_68 <= add_ln497_fu_192_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten13_fu_68 <= 15'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln497_fu_186_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_60 <= j_9_fu_243_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_60 <= 7'd0;
        end
    end
end

always @ (*) begin
    if (((icmp_ln497_fu_186_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_load = 7'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_64;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten13_load = 15'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten13_load = indvar_flatten13_fu_68;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_8 = 7'd0;
    end else begin
        ap_sig_allocacmp_j_8 = j_fu_60;
    end
end

always @ (*) begin
    if (((icmp_ln497_fu_186_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        hasItst_out_ap_vld = 1'b1;
    end else begin
        hasItst_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln497_fu_186_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inc1313173_out_ap_vld = 1'b1;
    end else begin
        inc1313173_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        intersection_ce0 = 1'b1;
    end else begin
        intersection_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln499_fu_264_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        intersection_we0 = 1'b1;
    end else begin
        intersection_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        potentialPlacement_AllPreds_ce0 = 1'b1;
    end else begin
        potentialPlacement_AllPreds_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        potentialPlacement_AllPreds_ce1 = 1'b1;
    end else begin
        potentialPlacement_AllPreds_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln497_fu_192_p2 = (ap_sig_allocacmp_indvar_flatten13_load + 15'd1);

assign add_ln499_fu_232_p2 = (zext_ln499_fu_228_p1 + 8'd16);

assign add_ln501_fu_278_p2 = (inc1313173_fu_72 + 8'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign hasItst_out = hasItst_fu_76;

assign i_34_fu_201_p2 = (ap_sig_allocacmp_i_load + 7'd1);

assign icmp_ln497_fu_186_p2 = ((ap_sig_allocacmp_indvar_flatten13_load == mul_ln497) ? 1'b1 : 1'b0);

assign icmp_ln498_fu_180_p2 = (($signed(j_cast_fu_176_p1) < $signed(conv115123_in)) ? 1'b1 : 1'b0);

assign icmp_ln499_fu_264_p2 = ((potentialPlacement_AllPreds_q1 == potentialPlacement_AllPreds_q0) ? 1'b1 : 1'b0);

assign inc1313173_out = inc1313173_fu_72;

assign intersection_address0 = zext_ln500_fu_273_p1;

assign intersection_d0 = potentialPlacement_AllPreds_q1;

assign j_9_fu_243_p2 = (select_ln508_fu_207_p3 + 7'd1);

assign j_cast_fu_176_p1 = ap_sig_allocacmp_j_8;

assign potentialPlacement_AllPreds_address0 = zext_ln499_1_fu_238_p1;

assign potentialPlacement_AllPreds_address1 = zext_ln508_fu_223_p1;

assign select_ln508_1_fu_215_p3 = ((icmp_ln498_fu_180_p2[0:0] == 1'b1) ? ap_sig_allocacmp_i_load : i_34_fu_201_p2);

assign select_ln508_fu_207_p3 = ((icmp_ln498_fu_180_p2[0:0] == 1'b1) ? ap_sig_allocacmp_j_8 : 7'd0);

assign zext_ln499_1_fu_238_p1 = add_ln499_fu_232_p2;

assign zext_ln499_fu_228_p1 = select_ln508_fu_207_p3;

assign zext_ln500_fu_273_p1 = inc1313173_fu_72;

assign zext_ln508_fu_223_p1 = select_ln508_1_fu_215_p3;

endmodule //runOne_CurOptPotentialPlacement_List_BypassLess_Gen_Pipeline_VITIS_LOOP_497_8_VITIS_LOOP_498_9
